# 给实例绑定属性的方法是通过实例变量，或者通过 self 变量
class Student(object):
    def __init__(self, name):
        self.name = name
s = Student('Bob')
s.score = 90


class Student(object):
    name = 'Student'
# 创建实例 
s = Student()    
# 打印 name 的属性，因为实例并没有 name属性，所以会继续查找　class　的 name 属性
print(s.name)   　　　　　# Student
# 打印类的 name 属性
print(Student.name)     # Student
# 给实例绑定 name 属性
s.name = 'Michael'
# 由于实例属性优先级高于类属性优先级。因此它会屏蔽类的 name 属性
print(s.name)          # Michael
# 类属性并未消失，用Student.name任然可以访问
print(Student.name)    # Student
# 删除实例的 name 属性
del s.name     
# 再次调用 s.name 。由于实例的 name 属性没有规则，　类的　name 属性就显示出来了
print(s.name)          # Student

# 在编写程序的时候，不要对实例属性和类属性使用相同的名字，相同名称的实例属性将屏蔽掉类属性
# 当删除掉实例属性后，再使用相同的名称，访问到的将是类属性
